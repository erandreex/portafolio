---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";

import "../../styles/global.css";
import Footer from "../../components/Footer.astro";

const posts = await getCollection("blog");

const tagColors: Record<string, string> = {
	"Digital Art": "bg-pink-500/10 text-pink-500",
	Illustration: "bg-blue-500/10 text-blue-500",
	Anime: "bg-purple-500/10 text-purple-500",
	"Web Development": "bg-[#219ebc]/10 text-[#219ebc]",
	JavaScript: "bg-yellow-500/10 text-yellow-500",
	Design: "bg-red-500/10 text-red-500",
	Angular: "bg-red-500/10 text-red-500",
	Chartjs: "bg-yellow-500/10 text-yellow-500",
};
---

<Layout title="Blog" description="blog oficial de Ernesto Solís">
	<Header />

	<div class="max-w-7xl py-4 px-6 md:px-6 mx-auto min-h-screen">
		<div class="flex items-center space-x-2 text-gray-400 py-10">
			<a href="/" class="hover:text-blue-500">Inicio</a>
			<span>/</span>
			<a href="/blog" class="hover:text-blue-500">Blog</a>
		</div>

		<h2 class="text-4xl font-bold text-white">Blog Personal</h2>
		<p class="text-gray-400 py-4 mb-12">A veces escribo lo que me de la gana.</p>

		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
			{
				posts.map((entrada: any) => (
					<a href={`blog/${entrada.slug}`} class="block">
						<article class="rounded-lg overflow-hidden shadow-lg hover:shadow-md transition-shadow bg-gradient-to-br from-gray-900 via-gray-800 to-gray-800 animate-wavy">
							<div class="relative">
								<img
									src={`${entrada.data.img}`}
									transition:name={`${entrada.data.title}-image`}
									alt={`${entrada.data.title}`}
									class="w-full h-full object-cover"
								/>
							</div>
							<div class="p-6">
								<div class="flex items-center justify-between mb-4">
									<div class="flex gap-2 ">
										{entrada.data.tags.map((tag: string) => {
											const colorClass = tagColors[tag] || "bg-gray-500/10 text-gray-300"; // Color por defecto si no está en la lista
											return <span class={`px-3 py-1 ${colorClass} rounded-full text-xs font-medium`}>{tag}</span>;
										})}
									</div>

									<time class="text-gray-300 text-sm">{entrada.data.datePub}</time>
								</div>
								<h2 class="text-xl font-bold mb-2 text-gray-100">{entrada.data.title}</h2>
							</div>
						</article>
					</a>
				))
			}
		</div>
	</div>

	<Footer />
</Layout>
